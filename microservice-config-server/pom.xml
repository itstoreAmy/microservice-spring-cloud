<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <artifactId>microservice-config-server</artifactId>
    <modelVersion>4.0.0</modelVersion>
    <name>microservice-config-server</name>
    <packaging>jar</packaging>
    <description>zuul</description>

    <!--父项目-->
    <parent>
        <artifactId>microservice-spring-cloud</artifactId>
        <groupId>com.emotte.cloud</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!--git-->
        <dependency>
            <groupId>org.eclipse.jgit</groupId>
            <artifactId>org.eclipse.jgit</artifactId>
            <version>${eclipse.jgit.version}</version>
        </dependency>

        <!-- 刷新 配置-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bus-amqp</artifactId>
        </dependency>

        <!-- 引入jta-atomikos支持 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jta-atomikos</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- 引入lombok支持 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

    </dependencies>



    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.yml</include>
                    <include>**/*.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <!-- <resource>
                <directory>src</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource> -->
        </resources>

    </build>

    <!--<build>-->
        <!--<plugins>-->
            <!--<plugin>-->
                <!--<groupId>com.spotify</groupId>-->
                <!--<artifactId>docker-maven-plugin</artifactId>-->
                <!--<version>0.4.13</version>-->
                <!--&lt;!&ndash;<executions>&ndash;&gt;-->
                <!--&lt;!&ndash;<execution>&ndash;&gt;-->
                <!--&lt;!&ndash;<id>build-image</id>&ndash;&gt;-->
                <!--&lt;!&ndash;<phase>package</phase>&ndash;&gt;-->
                <!--&lt;!&ndash;<goals>&ndash;&gt;-->
                <!--&lt;!&ndash;<goal>build</goal>&ndash;&gt;-->
                <!--&lt;!&ndash;</goals>&ndash;&gt;-->
                <!--&lt;!&ndash;</execution>&ndash;&gt;-->
                <!--&lt;!&ndash;</executions>&ndash;&gt;-->
                <!--<configuration>-->
                    <!--&lt;!&ndash;${docker.image.prefix}/${project.artifactId}&ndash;&gt;-->
                    <!--<imageName>${project.artifactId}:${project.version}</imageName>-->
                    <!--<forceTags>true</forceTags>-->
                    <!--<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>-->

                    <!--&lt;!&ndash; 用于指定基础镜像,类似于Dockerfile中的FROM命令&ndash;&gt;-->
                    <!--<baseImage>java</baseImage>-->
                    <!--&lt;!&ndash; 类似于Dockerfile的ENTRYPOINT命令&ndash;&gt;-->
                    <!--<entryPoint>["java","-jar", "${project.build.finalName}.jar}"]</entryPoint>-->
                    <!--&lt;!&ndash;<dockerDirectory>src/main/docker</dockerDirectory>&ndash;&gt;-->
                    <!--&lt;!&ndash; 解决Connect to localhost:2375的问题的其中一种方式，注意要跟docker 环境信息相一致 &ndash;&gt;-->
                    <!--&lt;!&ndash;<dockerHost>https://192.168.99.100:2376</dockerHost>&ndash;&gt;-->
                    <!--&lt;!&ndash;<dockerCertPath>C:\Users\Administrator\.docker\machine\machines\default</dockerCertPath>&ndash;&gt;-->
                    <!--<resources>-->
                        <!--<resource>-->
                            <!--<targetPath>/</targetPath>-->
                            <!--&lt;!&ndash; 用于指定需要复制的根目录 project.build.directory 标识target目录&ndash;&gt;-->
                            <!--<directory>${project.build.directory}</directory>-->
                            <!--&lt;!&ndash; 用于指定需要复制的文件${project.build.finalName}.jar指的是打包后的jar文件&ndash;&gt;-->
                            <!--<include>${project.build.finalName}.jar</include>-->
                        <!--</resource>-->
                    <!--</resources>-->
                <!--</configuration>-->
            <!--</plugin>-->
        <!--</plugins>-->
    <!--</build>-->


</project>